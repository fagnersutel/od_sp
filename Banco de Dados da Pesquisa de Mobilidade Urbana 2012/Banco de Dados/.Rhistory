weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
require(RJSONIO)
library(jsonlite)
linha = 5983
path = paste('http://www.poatransporte.com.br/php/facades/process.php?a=il&p=', linha, sep = "")
path
json_file <- fromJSON(path)
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
#View(json_file)
json_file$idlinha
json_file$nome
json_file$codigo
json_file$`0`
length(json_file)
aa = do.call("rbind", json_file)
class(aa)
dim(aa)
aa = as.data.frame(aa)
head(aa)
bb = fromJSON(path)
bb
class(bb)
length(bb)
bb[4]
loop = c(4:length(aa$lat))
for(i in loop){
print( paste((i-3), aa[i,1], aa[i,2], sep = ";"))
}
library(magrittr)
library(dplyr)
library(leaflet)
library(leaflet.extras)
lim = length(aa$lat)
lim = (lim - 3)
lim
aa = aa[4:lim,]
dim(aa)
aa$lat =  as.numeric(as.character(aa$lat))
aa$lng =  as.numeric(as.character(aa$lng))
map <- leaflet(data = aa) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")
map
## paradas
path = paste('http://www.poatransporte.com.br/php/facades/process.php?a=tp&p=((-30.14296222668432,%20-51.87917968750003),%20(-29.79200328961529,%20-50.56082031250003))))')
path
json_file <- fromJSON(path)
paradas = as.data.frame(json_file)
loop = c(1:3)
for(i in loop){
print(paradas[i, ])
}
paradas$latitude = as.numeric(as.character(paradas$latitude))
paradas$longitude  = as.numeric(as.character(paradas$longitude))
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste("<br>a", linhas,  sep = " "),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
head(paradas)
a = paradas[2,]$linhas[[1]]
class(a)
a$codigoLinha
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste("Dados: ", paradas$linhas[],  sep = " "),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
library(dplyr)
df <- tibble(
x = 1:3,
y = c("a", "d,e,f", "g,h")
)
df
df %>%
transform(y = strsplit(y, ",")) %>%
unnest(y)
install.packages('unnest')
library(tidyr)
df %>%
transform(y = strsplit(y, ",")) %>%
unnest(y)
df
df %>%
transform(y = strsplit(y, ",")) %>%
unnest(y)
paradas[1, ]
df <- tibble(
x = 1:3,
y = c("a", "d,e,f", "g,h")
)
df
paradas %>%
transform(linhas = strsplit(linhas, ",")) %>%
unnest(linhas)
df <- tibble(
x = 1:3,
y = c("a", "d,e,f", "g,h")
)
df
df %>%
transform(y = strsplit(y, ",")) %>%
unnest(y)
paradas[1, ]
paradas %>%
transform(linhas = strsplit(linhas, ", ")) %>%
unnest(linhas)
df <- tibble(
x = 1:3,
y = c("a", "d,e,f", "g,h")
)
df
paradas %>%
unnest(linhas = strsplit(linhas, ","))
paradas[1, ]
paradas %>%
unnest(linhas = strsplit(linhas, ","))
paradas %>%
unnest(linhas = strsplit(linhas, "-"))
paradas[1, ]
View(paradas[1, ])
a = paradas$linhas
a
a[1]
class(a)
a = as.data.frame(a)
unlist(a[1])
b = unlist(a[1])
class(b)
dim(b)
length(b)
b
require(RJSONIO)
library(jsonlite)
linha = 5983
path = paste('http://www.poatransporte.com.br/php/facades/process.php?a=il&p=', linha, sep = "")
path
json_file <- fromJSON(path)
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
#View(json_file)
json_file$idlinha
json_file$nome
json_file$codigo
json_file$`0`
length(json_file)
aa = do.call("rbind", json_file)
class(aa)
dim(aa)
aa = as.data.frame(aa)
head(aa)
bb = fromJSON(path)
bb
class(bb)
length(bb)
bb[4]
loop = c(4:length(aa$lat))
for(i in loop){
print( paste((i-3), aa[i,1], aa[i,2], sep = ";"))
}
library(magrittr)
library(dplyr)
library(leaflet)
library(leaflet.extras)
lim = length(aa$lat)
lim = (lim - 3)
lim
aa = aa[4:lim,]
dim(aa)
aa$lat =  as.numeric(as.character(aa$lat))
aa$lng =  as.numeric(as.character(aa$lng))
map <- leaflet(data = aa) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")
map
## paradas
path = paste('http://www.poatransporte.com.br/php/facades/process.php?a=tp&p=((-30.14296222668432,%20-51.87917968750003),%20(-29.79200328961529,%20-50.56082031250003))))')
path
json_file <- fromJSON(path)
paradas = as.data.frame(json_file)
loop = c(1:3)
for(i in loop){
print(paradas[i, ])
}
paradas$latitude = as.numeric(as.character(paradas$latitude))
paradas$longitude  = as.numeric(as.character(paradas$longitude))
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste("<br>a", linhas,  sep = " "),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
head(paradas)
a = paradas[2,]$linhas[[1]]
class(a)
a$codigoLinha
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste("Dados: ", paradas$linhas[],  sep = " "),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste("Dados: ", unlist(linhas[]),  sep = " "),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~unlist(linhas),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~unlist(linhas[]),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste(unlist(linhas[]), sep = "|"),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste(c(unlist(linhas[])), sep = "|"),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste(unlist(linhas[[1]]), sep = "|"),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste(unlist(linhas[1]), sep = "|"),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste(linhas[1], sep = "|"),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
teste = paradas[1, ]
teste
paste(linhas[1], sep = "|")
paste(paradas$linhas[1], sep = "|")
paste(teste$linhas[1], sep = "|")
paste(teste$linhas[], sep = "|")
paste(teste$linhas[[1]], sep = "|")
paste(teste$linhas[[1]], sep = "-")
ff = paste(teste$linhas[[1]], sep = "|")
ff
dd[1]
ff[1]
ff[2]
paste(linhas[1], sep = "|")
teste = paradas[2, ]
teste
paste(linhas[1], sep = "")
paste(teste$linhas[[1]], sep = "")
unlist(teste$linhas)
require(RJSONIO)
linha = 5983
path = paste('http://www.poatransporte.com.br/php/facades/process.php?a=il&p=', linha, sep = "")
path
json_file <- fromJSON(path)
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
#View(json_file)
json_file$idlinha
json_file$nome
json_file$codigo
json_file$`0`
length(json_file)
aa = do.call("rbind", json_file)
class(aa)
dim(aa)
aa = as.data.frame(aa)
library(jsonlite)
bb = fromJSON(path)
bb
class(bb)
length(bb)
bb[4]
loop = c(4:length(aa$lat))
for(i in loop){
print( paste((i-3), aa[i,1], aa[i,2], sep = ";"))
}
library(magrittr)
library(dplyr)
library(leaflet)
library(leaflet.extras)
lim = length(aa$lat)
lim = (lim - 3)
lim
aa = aa[4:lim,]
dim(aa)
aa$lat =  as.numeric(as.character(aa$lat))
aa$lng =  as.numeric(as.character(aa$lng))
map <- leaflet(data = aa) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")
map
## paradas
path = paste('http://www.poatransporte.com.br/php/facades/process.php?a=tp&p=((-30.14296222668432,%20-51.87917968750003),%20(-29.79200328961529,%20-50.56082031250003))))')
path
json_file <- fromJSON(path)
paradas = as.data.frame(json_file)
paradas[1, ]
paradas$latitude = as.numeric(as.character(paradas$latitude))
paradas$longitude  = as.numeric(as.character(paradas$longitude))
loop = c(1:length(paradas$codigo))
for(i in loop){
paradas$IdLinha[i] = paradas$linhas[[i]][1]
paradas$codLinha[i] = paradas$linhas[[i]][2]
paradas$nomeLinha[i] = paradas$linhas[[i]][3]
}
View(head(paradas))
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste("<br>Id", IdLinha, "<br>Cod", codLinha, "<br>Nome", nomeLinha,  sep = " "),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
head(paradas)
a = paradas[2,]$linhas[[1]]
class(a)
a$codigoLinha
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste("Dados: ", paradas$linhas[],  sep = " "),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste("<br>Id", IdLinha, "<p>Cod", codLinha, "<p>Nome", nomeLinha,  sep = " "),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
require(RJSONIO)
linha = 5983
path = paste('http://www.poatransporte.com.br/php/facades/process.php?a=il&p=', linha, sep = "")
path
json_file <- fromJSON(path)
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
#View(json_file)
json_file$idlinha
json_file$nome
json_file$codigo
json_file$`0`
length(json_file)
aa = do.call("rbind", json_file)
class(aa)
dim(aa)
aa = as.data.frame(aa)
library(jsonlite)
bb = fromJSON(path)
bb
class(bb)
length(bb)
bb[4]
loop = c(4:length(aa$lat))
for(i in loop){
print( paste((i-3), aa[i,1], aa[i,2], sep = ";"))
}
library(magrittr)
library(dplyr)
library(leaflet)
library(leaflet.extras)
lim = length(aa$lat)
lim = (lim - 3)
lim
aa = aa[4:lim,]
dim(aa)
aa$lat =  as.numeric(as.character(aa$lat))
aa$lng =  as.numeric(as.character(aa$lng))
map <- leaflet(data = aa) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")
map
## paradas
path = paste('http://www.poatransporte.com.br/php/facades/process.php?a=tp&p=((-30.14296222668432,%20-51.87917968750003),%20(-29.79200328961529,%20-50.56082031250003))))')
path
json_file <- fromJSON(path)
paradas = as.data.frame(json_file)
paradas[1, ]
paradas$latitude = as.numeric(as.character(paradas$latitude))
paradas$longitude  = as.numeric(as.character(paradas$longitude))
loop = c(1:length(paradas$codigo))
for(i in loop){
paradas$IdLinha[i] = paradas$linhas[[i]][1]
paradas$codLinha[i] = paradas$linhas[[i]][2]
paradas$nomeLinha[i] = paradas$linhas[[i]][3]
}
View(head(paradas))
map <- leaflet(data = paradas) %>%
addTiles() %>%
addPolylines(aa[, 2],aa[, 1],weight=2.25,color="red")  %>%
addCircles(~paradas$longitude, ~paradas$latitude, popup=~paste("<br>Id", IdLinha, "<p>Cod", codLinha, "<p>Nome", nomeLinha,  sep = " "),
weight = 1, radius=20, color= 'blue', stroke = TRUE, fillOpacity = 0.8)
map
gctorture (FALSE)
rm(list = ls(all.names = TRUE))
setwd('~/OneDrive/r-files/od_sp/Banco de Dados da Pesquisa de Mobilidade Urbana 2012/Banco de Dados/')
#https://www.gps-latitude-longitude.com/gps-coordinates-of-porto-alegre
library(foreign)
library(proj4)
library(leaflet.extras)
proj4string <- "+proj=utm +zone=23 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs "
# Source data
dados = read.dbf('Mobilidade_2012_v0.dbf')
head(dados)
xy = dados[, 3:4]
head(xy)
#xy <- data.frame(x=333132, y=7394597)
# Transformed data
pj <- project(xy, proj4string, inverse=TRUE)
latlon <- data.frame(lat=pj$y, lon=pj$x)
head(latlon)
map <- leaflet(data = xy) %>%
addTiles() %>%
addCircles(~latlon$lon, ~latlon$lat, popup=~paste("<br>Lat", latlon$lat, "<p>Long", latlon$lon,  sep = " "),
weight = 1, radius=50, color= 'red', stroke = TRUE, fillOpacity = 0.5)
map
xy = dados[, 58:59]
head(xy)
#xy <- data.frame(x=333132, y=7394597)
# Transformed data
pj <- project(xy, proj4string, inverse=TRUE)
latlon2 <- data.frame(lat=pj$y, lon=pj$x)
head(latlon)
map <- leaflet(data = xy) %>%
addTiles() %>%
addCircles(group="Origens", ~latlon$lon, ~latlon$lat, popup=~paste("<br>Lat", latlon$lat, "<p>Long", latlon$lon,  sep = " "),
weight = 1, radius=50, color= 'red', stroke = TRUE, fillOpacity = 0.5)  %>%
addCircles(group="Destinos", ~latlon2$lon, ~latlon2$lat, popup=~paste("<br>Lat", latlon2$lat, "<p>Long", latlon2$lon,  sep = " "),
weight = 1, radius=50, color= 'blue', stroke = TRUE, fillOpacity = 0.5)  %>%
addLayersControl(overlayGroups = c("Origens", "Destinos"),
options = layersControlOptions(collapsed = FALSE))
map
latlon2 = complete.cases(latlon2)
dim(latlon)
dim(latlon2)
latlon2 <- data.frame(lat=pj$y, lon=pj$x)
dim(latlon2)
dim(latlon)
dim(latlon2)
gctorture (FALSE)
rm(list = ls(all.names = TRUE))
setwd('~/OneDrive/r-files/od_sp/Banco de Dados da Pesquisa de Mobilidade Urbana 2012/Banco de Dados/')
#https://www.gps-latitude-longitude.com/gps-coordinates-of-porto-alegre
library(foreign)
library(proj4)
library(leaflet.extras)
proj4string <- "+proj=utm +zone=23 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs "
# Source data
dados = read.dbf('Mobilidade_2012_v0.dbf')
head(dados)
xy = dados[, 3:4]
head(xy)
#xy <- data.frame(x=333132, y=7394597)
# Transformed data
pj <- project(xy, proj4string, inverse=TRUE)
latlon <- data.frame(lat=pj$y, lon=pj$x)
head(latlon)
map <- leaflet(data = xy) %>%
addTiles() %>%
addCircles(~latlon$lon, ~latlon$lat, popup=~paste("<br>Lat", latlon$lat, "<p>Long", latlon$lon,  sep = " "),
weight = 1, radius=50, color= 'red', stroke = TRUE, fillOpacity = 0.5)
map
xy = dados[, 58:59]
head(xy)
#xy <- data.frame(x=333132, y=7394597)
# Transformed data
pj <- project(xy, proj4string, inverse=TRUE)
latlon2 <- data.frame(lat=pj$y, lon=pj$x)
head(latlon)
dim(latlon)
dim(latlon2)
latlon2 = latlon2[complete.cases(latlon2), ]
dim(latlon2)
map <- leaflet(data = xy) %>%
addTiles() %>%
addCircles(group="Origens", ~latlon$lon, ~latlon$lat, popup=~paste("<br>Lat", latlon$lat, "<p>Long", latlon$lon,  sep = " "),
weight = 1, radius=50, color= 'red', stroke = TRUE, fillOpacity = 0.5)  %>%
addCircles(group="Destinos", ~latlon2$lon, ~latlon2$lat, popup=~paste("<br>Lat", latlon2$lat, "<p>Long", latlon2$lon,  sep = " "),
weight = 1, radius=50, color= 'blue', stroke = TRUE, fillOpacity = 0.5)  %>%
addLayersControl(overlayGroups = c("Origens", "Destinos"),
options = layersControlOptions(collapsed = FALSE))
map
